% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/calc_genoprob.R
\name{calc_genoprob}
\alias{calc_genoprob}
\title{Calculate conditional genotype probabilities}
\usage{
calc_genoprob(cross, step = 0, off_end = 0, stepwidth = c("fixed", "max"),
  pseudomarker_map, error_prob = 0.0001, map_function = c("haldane",
  "kosambi", "c-f", "morgan"), quiet = TRUE, n_cores = 1)
}
\arguments{
\item{cross}{Object of class \code{"cross2"}. For details, see the
\href{http://kbroman.org/qtl2/assets/vignettes/developer_guide.html}{R/qtl2 developer guide}.}

\item{step}{Distance between pseudomarkers and markers; if
\code{step=0} no pseudomarkers are inserted.}

\item{off_end}{Distance beyond terminal markers in which to insert
pseudomarkers.}

\item{stepwidth}{Indicates whether to use a fixed grid
(\code{stepwidth="fixed"}) or to use the maximal distance between
pseudomarkers to ensure that no two adjacent markers/pseudomarkers
are more than \code{step} apart.}

\item{pseudomarker_map}{A map of pseudomarker locations; if provided the
\code{step}, \code{off_end}, and \code{stepwidth} arguments are
ignored.}

\item{error_prob}{Assumed genotyping error probability}

\item{map_function}{Character string indicating the map function to
use to convert genetic distances to recombination fractions.}

\item{quiet}{If \code{FALSE}, print progress messages.}

\item{n_cores}{Number of CPU cores to use, for parallel calculations.
(If \code{0}, use \code{\link[parallel]{detectCores}}.)}
}
\value{
A list of three-dimensional arrays of probabilities,
individuals x positions x genotypes
}
\description{
Uses a hidden Markov model to calculate the probabilities of the
true underlying genotypes given the observed multipoint marker
data, with possible allowance for genotyping errors.
}
\details{
Let \eqn{O_k}{O[k]} denote the observed marker genotype at position
 \eqn{k}, and \eqn{g_k}{g[k]} denote the corresponding true underlying
 genotype.

 We use the forward-backward equations to calculate
 \eqn{\alpha_{kv} = \log Pr(O_1, \ldots, O_k, g_k = v)}{%
   a[k][v] = log Pr(O[1], \ldots, O[k], g[k] = v)}
 and
 \eqn{\beta_{kv} = \log Pr(O_{k+1}, \ldots, O_n | g_k = v)}{%
   b[k][v] = log Pr(O[k+1], \ldots, O[n] | g[k] = v)}

 We then obtain
 \eqn{Pr(g_k | O_1, \ldots, O_n) = \exp(\alpha_{kv} + \beta_{kv}) / s}{%
   Pr(g[k] | O[1], \ldots, O[n] = exp(a[k][v] + b[k][v]) / s}
 where
 \eqn{s = \sum_v \exp(\alpha_{kv} + \beta_{kv})}{%
   s = sum_v exp(a[k][v] + b[k][v])}
}
\examples{
grav2 <- read_cross2(system.file("extdata", "grav2.zip", package="qtl2geno"))
probs <- calc_genoprob(grav2, step=1, error_prob=0.002)
}
\keyword{utilities}

